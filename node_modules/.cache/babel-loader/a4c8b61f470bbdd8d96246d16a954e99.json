{"ast":null,"code":"var _jsxFileName = \"/Users/jordankaiser/Documents/Bootcamp Files/clicky-game/clicky-game/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/NavBar\";\nimport Header from \"./components/Header\";\nimport Card from \"./components/Card\";\nimport Main from \"./components/Main\";\nimport images from \"./images.json\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      images,\n      score: 0,\n      topScore: 0 // cardArray: [],\n\n    };\n\n    this.shuffleCards = () => {\n      return this.state.images.sort(() => Math.random() - 0.5);\n    };\n  }\n\n  handleCardClick(id, clicked) {\n    let cardOrderArray = this.state.images;\n\n    if (clicked) {\n      cardOrderArray.forEach((image, i) => {\n        cardOrderArray[i].clicked = false;\n      });\n      this.shuffleCards(this.state.images);\n      return this.setState({\n        score: 0,\n        message: \"Womp, try again.\"\n      });\n    } else {\n      cardOrderArray.forEach((image, index) => {\n        if (id === image.id) {\n          cardOrderArray[index].clicked = true;\n        }\n\n        this.shuffleCards(this.state.cardData);\n        const {\n          highscore,\n          score\n        } = this.state;\n        const newScore = score + 1;\n        const newHighscore = newScore > highscore ? newScore : highscore;\n        return this.setState({\n          message: \"You Guessed Correctly!\",\n          score: newScore,\n          highscore: newHighscore\n        });\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      score: this.state.score,\n      topscore: this.state.topscore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      handleCardClick: this.handleCardClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }), \" \"), \" \");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jordankaiser/Documents/Bootcamp Files/clicky-game/clicky-game/src/App.js"],"names":["React","Navbar","Header","Card","Main","images","App","Component","state","score","topScore","shuffleCards","sort","Math","random","handleCardClick","id","clicked","cardOrderArray","forEach","image","i","setState","message","index","cardData","highscore","newScore","newHighscore","render","topscore"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AAEA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNH,MAAAA,MADM;AAENI,MAAAA,KAAK,EAAE,CAFD;AAGNC,MAAAA,QAAQ,EAAE,CAHJ,CAIN;;AAJM,KADwB;;AAAA,SAQhCC,YARgC,GAQjB,MAAM;AACnB,aAAO,KAAKH,KAAL,CAAWH,MAAX,CAAkBO,IAAlB,CAAuB,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAA7C,CAAP;AACD,KAV+B;AAAA;;AAYhCC,EAAAA,eAAe,CAACC,EAAD,EAAKC,OAAL,EAAc;AAC3B,QAAIC,cAAc,GAAG,KAAKV,KAAL,CAAWH,MAAhC;;AAEA,QAAIY,OAAJ,EAAa;AACXC,MAAAA,cAAc,CAACC,OAAf,CAAuB,CAACC,KAAD,EAAQC,CAAR,KAAc;AACnCH,QAAAA,cAAc,CAACG,CAAD,CAAd,CAAkBJ,OAAlB,GAA4B,KAA5B;AACD,OAFD;AAGA,WAAKN,YAAL,CAAkB,KAAKH,KAAL,CAAWH,MAA7B;AACA,aAAO,KAAKiB,QAAL,CAAc;AACnBb,QAAAA,KAAK,EAAE,CADY;AAEnBc,QAAAA,OAAO,EAAE;AAFU,OAAd,CAAP;AAID,KATD,MASO;AACLL,MAAAA,cAAc,CAACC,OAAf,CAAuB,CAACC,KAAD,EAAQI,KAAR,KAAkB;AACvC,YAAIR,EAAE,KAAKI,KAAK,CAACJ,EAAjB,EAAqB;AACnBE,UAAAA,cAAc,CAACM,KAAD,CAAd,CAAsBP,OAAtB,GAAgC,IAAhC;AACD;;AACD,aAAKN,YAAL,CAAkB,KAAKH,KAAL,CAAWiB,QAA7B;AAEA,cAAM;AACJC,UAAAA,SADI;AAEJjB,UAAAA;AAFI,YAGF,KAAKD,KAHT;AAIA,cAAMmB,QAAQ,GAAGlB,KAAK,GAAG,CAAzB;AACA,cAAMmB,YAAY,GAAGD,QAAQ,GAAGD,SAAX,GAAuBC,QAAvB,GAAkCD,SAAvD;AACA,eAAO,KAAKJ,QAAL,CAAc;AACnBC,UAAAA,OAAO,EAAE,wBADU;AAEnBd,UAAAA,KAAK,EAAEkB,QAFY;AAGnBD,UAAAA,SAAS,EAAEE;AAHQ,SAAd,CAAP;AAKD,OAjBD;AAkBD;AACF;;AAGDC,EAAAA,MAAM,GAAG;AACP,wBAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEP,oBACA,MADA;AACO,MAAA,KAAK,EACV,KAAKrB,KAAL,CAAWC,KAFb;AAIA,MAAA,QAAQ,EACN,KAAKD,KAAL,CAAWsB,QALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFO,oBASJ,oBACH,MADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATI,eAWP,oBACA,IADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA,oBACA,IADA;AACK,MAAA,eAAe,EAClB,KAAKf,eAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,MAXO,MAAT;AAqBD;;AArE+B;;AAwElC,eAAeT,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/NavBar\";\nimport Header from \"./components/Header\";\nimport Card from \"./components/Card\";\nimport Main from \"./components/Main\";\nimport images from \"./images.json\";\n\nclass App extends React.Component {\n  state = {\n    images,\n    score: 0,\n    topScore: 0\n    // cardArray: [],\n  };\n\n  shuffleCards = () => {\n    return this.state.images.sort(() => Math.random() - 0.5);\n  };\n\n  handleCardClick(id, clicked) {\n    let cardOrderArray = this.state.images;\n\n    if (clicked) {\n      cardOrderArray.forEach((image, i) => {\n        cardOrderArray[i].clicked = false;\n      });\n      this.shuffleCards(this.state.images)\n      return this.setState({\n        score: 0,\n        message: \"Womp, try again.\"\n      });\n    } else {\n      cardOrderArray.forEach((image, index) => {\n        if (id === image.id) {\n          cardOrderArray[index].clicked = true;\n        }\n        this.shuffleCards(this.state.cardData)\n\n        const {\n          highscore,\n          score\n        } = this.state;\n        const newScore = score + 1;\n        const newHighscore = newScore > highscore ? newScore : highscore;\n        return this.setState({\n          message: \"You Guessed Correctly!\",\n          score: newScore,\n          highscore: newHighscore,\n        });\n      });\n    }\n  }\n\n\n  render() {\n    return ( <\n      div >\n      <\n      Navbar score = {\n        this.state.score\n      }\n      topscore = {\n        this.state.topscore\n      }\n      /> <\n      Header / >\n      <\n      Main >\n      <\n      Card handleCardClick = {\n        this.handleCardClick\n      }\n      /> <\n      /Main> <\n      /div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}