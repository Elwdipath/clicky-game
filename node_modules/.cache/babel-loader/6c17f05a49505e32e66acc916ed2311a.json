{"ast":null,"code":"var _jsxFileName = \"/Users/jordankaiser/Documents/Bootcamp Files/clicky-game/clicky-game/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/NavBar\";\nimport Header from \"./components/Header\"; // import Card from \"./components/Card\";\n\nimport Main from \"./components/Main\";\nimport images from \"./images.json\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      images,\n      score: 0,\n      topScore: 0,\n      cardArray: []\n    };\n\n    this.shuffleCards = () => {\n      return this.state.images.sort(() => Math.random() - 0.5);\n    };\n  }\n\n  handleCardClick(id, clicked) {\n    if (!images[i].clicked) {\n      images[i].clicked = true;\n      this.setState({\n        score: this.state.score + 1\n      });\n\n      if (this.state.topScore <= this.state.score) {\n        this.setState({\n          topScore: this.state.topScore + 1\n        });\n      }\n\n      this.shuffleCards(this.state.iamges);\n    } else {\n      this.shuffleCards(this.state.images);\n      const characters = [];\n      this.state.characters.forEach(image => {\n        image.clicked = false;\n        image.push(character);\n      });\n      this.setState({\n        images: images,\n        score: 0\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      score: this.state.score,\n      topscore: this.state.topscore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Main, {\n      handleCardClick: this.handleCardClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }), \">\");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jordankaiser/Documents/Bootcamp Files/clicky-game/clicky-game/src/App.js"],"names":["React","Navbar","Header","Main","images","App","Component","state","score","topScore","cardArray","shuffleCards","sort","Math","random","handleCardClick","id","clicked","i","setState","iamges","characters","forEach","image","push","character","render","topscore"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNH,MAAAA,MADM;AAENI,MAAAA,KAAK,EAAE,CAFD;AAGNC,MAAAA,QAAQ,EAAE,CAHJ;AAINC,MAAAA,SAAS,EAAE;AAJL,KADwB;;AAAA,SAQhCC,YARgC,GAQjB,MAAM;AACnB,aAAO,KAAKJ,KAAL,CAAWH,MAAX,CAAkBQ,IAAlB,CAAuB,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAA7C,CAAP;AACD,KAV+B;AAAA;;AAYhCC,EAAAA,eAAe,CAACC,EAAD,EAAKC,OAAL,EAAc;AAC3B,QAAI,CAACb,MAAM,CAACc,CAAD,CAAN,CAAUD,OAAf,EAAwB;AACtBb,MAAAA,MAAM,CAACc,CAAD,CAAN,CAAUD,OAAV,GAAoB,IAApB;AACA,WAAKE,QAAL,CAAc;AAAEX,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAd;;AACF,UAAI,KAAKD,KAAL,CAAWE,QAAX,IAAuB,KAAKF,KAAL,CAAWC,KAAtC,EAA6C;AAC3C,aAAKW,QAAL,CAAc;AAAEV,UAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE,QAAX,GAAsB;AAAlC,SAAd;AACC;;AACD,WAAKE,YAAL,CAAkB,KAAKJ,KAAL,CAAWa,MAA7B;AACD,KAPD,MAOO;AACL,WAAKT,YAAL,CAAkB,KAAKJ,KAAL,CAAWH,MAA7B;AACA,YAAMiB,UAAU,GAAG,EAAnB;AACA,WAAKd,KAAL,CAAWc,UAAX,CAAsBC,OAAtB,CAA8BC,KAAK,IAAI;AACrCA,QAAAA,KAAK,CAACN,OAAN,GAAgB,KAAhB;AACAM,QAAAA,KAAK,CAACC,IAAN,CAAWC,SAAX;AACD,OAHD;AAIA,WAAKN,QAAL,CAAc;AACZf,QAAAA,MAAM,EAAEA,MADI;AAEZI,QAAAA,KAAK,EAAE;AAFK,OAAd;AAID;AACF;;AAGDkB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWC,KAA1B;AAAiC,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWoB,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,IAAD;AAAM,MAAA,eAAe,EAAE,KAAKZ,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,MADF;AAOD;;AA3C+B;;AA8ClC,eAAeV,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/NavBar\";\nimport Header from \"./components/Header\";\n// import Card from \"./components/Card\";\nimport Main from \"./components/Main\";\nimport images from \"./images.json\";\n\nclass App extends React.Component {\n  state = {\n    images,\n    score: 0,\n    topScore: 0,\n    cardArray: [],\n  };\n\n  shuffleCards = () => {\n    return this.state.images.sort(() => Math.random() - 0.5);\n  };\n\n  handleCardClick(id, clicked) {\n    if (!images[i].clicked) {\n      images[i].clicked = true;\n      this.setState({ score: this.state.score + 1 })\n    if (this.state.topScore <= this.state.score) {\n      this.setState({ topScore: this.state.topScore + 1})\n      }\n      this.shuffleCards(this.state.iamges);\n    } else {\n      this.shuffleCards(this.state.images);\n      const characters = [];\n      this.state.characters.forEach(image => {\n        image.clicked = false\n        image.push(character);\n      });\n      this.setState({ \n        images: images,\n        score: 0\n       })\n    }\n  }\n\n  \n  render() {\n    return (\n      <div>\n        <Navbar score={this.state.score} topscore={this.state.topscore} />\n        <Header />\n        <Main handleCardClick={this.handleCardClick} />>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}